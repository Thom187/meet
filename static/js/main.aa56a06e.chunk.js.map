{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","collapsed","toggleDetails","setState","prevState","inherits","createClass","key","value","_this2","event","props","react_default","a","createElement","className","summary","Date","start","dateTime","toString","location","Fragment","href","htmlLink","description","onClick","Component","EventList","events","map","id","src_Event","CitySearch","query","suggestions","handleInputChanged","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","type","onChange","NumberOfEvents","num","changeNum","mockData","kind","etag","status","created","updated","creator","email","self","organizer","timeZone","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","App","src_CitySearch","src_EventList","src_NumberOfEvents","Boolean","window","hostname","match","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"yNAiDeA,SA/CJ,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAOR,OAPQT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAETQ,MAAQ,CAAEC,WAAW,GAAMhB,EAC3BiB,cAAgB,WACdjB,EAAKkB,SAAS,SAACC,GAAS,MAAM,CAC5BH,WAAYG,EAAUH,cAEzBhB,EAqCA,OA5CQC,OAAAmB,EAAA,EAAAnB,CAAAJ,EAAAC,GAORG,OAAAoB,EAAA,EAAApB,CAAAJ,EAAA,EAAAyB,IAAA,SAAAC,MAAA,WAEQ,IAAAC,EAAArB,KACCsB,EAAUtB,KAAKuB,MAAfD,MACAT,EAAcb,KAAKY,MAAnBC,UAER,OACEW,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WACXL,EAAMM,SAETJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eACV,IAAIE,KAAKP,EAAMQ,MAAMC,UAAUC,YAElCR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAgB,IAAAhB,OACtBW,EAAMM,QAAO,OAAAjB,OAAMW,EAAMW,YAG9BpB,GACAW,EAAAC,EAAAC,cAAAF,EAAAC,EAAAS,SAAA,KACEV,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAO,gBAGrBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,OAAOQ,KAAMb,EAAMc,UAAS,kCAGzCZ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eACVL,EAAMe,cAKbb,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBW,QAAS,kBAAMjB,EAAKP,kBACpDD,EAAY,OAAS,OAAM,iBAInCnB,EA5CQ,CAAS6C,cCgBLC,EAfA,SAAA7C,GAAA,SAAA6C,IAAA,OAAA1C,OAAAC,EAAA,EAAAD,CAAAE,KAAAwC,GAAA1C,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAA0C,GAAA9B,MAAAV,KAAAE,YAYZ,OAZYJ,OAAAmB,EAAA,EAAAnB,CAAA0C,EAAA7C,GAAAG,OAAAoB,EAAA,EAAApB,CAAA0C,EAAA,EAAArB,IAAA,SAAAC,MAAA,WACJ,IACCqB,EAAWzC,KAAKuB,MAAhBkB,OACR,OACEjB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACXc,EAAOC,IAAI,SAACpB,GAAK,OAChBE,EAAAC,EAAAC,cAAA,MAAIP,IAAKG,EAAMqB,IACbnB,EAAAC,EAAAC,cAACkB,EAAK,CAACtB,MAAOA,YAKvBkB,EAZY,CAASD,aC+CTM,EAhDC,SAAAlD,GAAA,SAAAkD,IAAA,IAAAjD,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6C,GAAA,QAAA5C,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAqBb,OArBaT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAA+C,IAAApC,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACdQ,MAAQ,CACNkC,MAAO,GACPC,YAAa,IACdlD,EAEDmD,mBAAqB,SAAC1B,GACpB,IAAMF,EAAQE,EAAM2B,OAAO7B,MACrB2B,EAAclD,EAAK0B,MAAM2B,UAAUC,OAAO,SAAClB,GAC/C,OAAOA,EAASmB,cAAcC,QAAQjC,EAAMgC,gBAAkB,IAEhEvD,EAAKkB,SAAS,CACZ+B,MAAO1B,EACP2B,iBAEHlD,EAEDyD,kBAAoB,SAACC,GACnB1D,EAAKkB,SAAS,CACZ+B,MAAOS,KAEV1D,EAwBA,OA7CaC,OAAAmB,EAAA,EAAAnB,CAAA+C,EAAAlD,GAqBbG,OAAAoB,EAAA,EAAApB,CAAA+C,EAAA,EAAA1B,IAAA,SAAAC,MAAA,WAEQ,IAAAC,EAAArB,KACP,OACEwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACE8B,KAAK,OACL7B,UAAU,OACVP,MAAOpB,KAAKY,MAAMkC,MAClBW,SAAUzD,KAAKgD,qBAEjBxB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACX3B,KAAKY,MAAMmC,YAAYL,IAAI,SAACa,GAAU,OACrC/B,EAAAC,EAAAC,cAAA,MACEP,IAAKoC,EACLjB,QAAS,kBAAMjB,EAAKiC,kBAAkBC,KACtCA,KAEJ/B,EAAAC,EAAAC,cAAA,MAAIP,IAAI,OACNK,EAAAC,EAAAC,cAAA,kCAKTmB,EA7Ca,CAASN,aCwBVmB,EAxBK,SAAA/D,GAAA,SAAA+D,IAAA,IAAA9D,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0D,GAAA,QAAAzD,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GACC,OADDT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAA4D,IAAAjD,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAClBQ,MAAQ,CAAE+C,IAAK,IAAI9D,EAoBlB,OArBiBC,OAAAmB,EAAA,EAAAnB,CAAA4D,EAAA/D,GACCG,OAAAoB,EAAA,EAAApB,CAAA4D,EAAA,EAAAvC,IAAA,YAAAC,MAAA,SAETA,GACRpB,KAAKe,SAAS,CAAE4C,IAAKvC,MACtB,CAAAD,IAAA,SAAAC,MAAA,WAEQ,IAAAC,EAAArB,KACC2D,EAAQ3D,KAAKY,MAAb+C,IAER,OACEnC,EAAAC,EAAAC,cAAA,SACEC,UAAU,MACV6B,KAAK,SACLpC,MAAOuC,EACPF,SAAU,SAACnC,GACTD,EAAKuC,UAAUtC,EAAM2B,OAAO7B,cAKnCsC,EArBiB,CAASnB,aCFvBsB,EAAW,CACf,CACEC,KAAM,iBACNC,KAAM,qBACNpB,GAAI,8CACJqB,OAAQ,YACR5B,SACE,oJACF6B,QAAS,2BACTC,QAAS,2BACTtC,QAAS,mBACTS,YACE,uWACFJ,SAAU,aACVkC,QAAS,CACPC,MAAO,oCACPC,MAAM,GAERC,UAAW,CACTF,MAAO,oCACPC,MAAM,GAERvC,MAAO,CACLC,SAAU,4BACVwC,SAAU,iBAEZC,IAAK,CACHzC,SAAU,4BACVwC,SAAU,iBAEZE,iBAAkB,6BAClBC,kBAAmB,CACjB3C,SAAU,4BACVwC,SAAU,iBAEZI,QAAS,wCACTC,SAAU,EACVC,UAAW,CACTC,YAAY,GAEdC,UAAW,WAEb,CACEjB,KAAM,iBACNC,KAAM,qBACNpB,GAAI,8CACJqB,OAAQ,YACR5B,SACE,oJACF6B,QAAS,2BACTC,QAAS,2BACTtC,QAAS,eACTS,YACE,mSACFJ,SAAU,kBACVkC,QAAS,CACPC,MAAO,oCACPC,MAAM,GAERC,UAAW,CACTF,MAAO,oCACPC,MAAM,GAERvC,MAAO,CACLC,SAAU,4BACVwC,SAAU,iBAEZC,IAAK,CACHzC,SAAU,4BACVwC,SAAU,iBAEZE,iBAAkB,6BAClBC,kBAAmB,CACjB3C,SAAU,4BACVwC,SAAU,iBAEZI,QAAS,wCACTC,SAAU,EACVC,UAAW,CACTC,YAAY,GAEdC,UAAW,YC9DAC,EAZN,SAAArF,GAAA,SAAAqF,IAAA,OAAAlF,OAAAC,EAAA,EAAAD,CAAAE,KAAAgF,GAAAlF,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAAkF,GAAAtE,MAAAV,KAAAE,YASN,OATMJ,OAAAmB,EAAA,EAAAnB,CAAAkF,EAAArF,GAAAG,OAAAoB,EAAA,EAAApB,CAAAkF,EAAA,EAAA7D,IAAA,SAAAC,MAAA,WAEL,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACuD,EAAU,MACXzD,EAAAC,EAAAC,cAACwD,EAAS,CAACzC,OAAQoB,IACnBrC,EAAAC,EAAAC,cAACyD,EAAc,WAGpBH,EATM,CAASzC,aCKE6C,QACW,cAA7BC,OAAOpD,SAASqD,UAEe,UAA7BD,OAAOpD,SAASqD,UAEhBD,OAAOpD,SAASqD,SAASC,MAAM,2DCjBnC,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCADY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHjF,EAAAC,EAAAC,cAACF,EAAAC,EAAMiF,WAAU,KACflF,EAAAC,EAAAC,cAACiF,EAAG,QFqHF,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjB,KAAK,SAACkB,GACLA,EAAaC,eAEdC,MAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,WE/G5B5B","file":"static/js/main.aa56a06e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Event extends Component {\n\n  state = { collapsed: true };\n  toggleDetails = () => {\n    this.setState((prevState) => ({\n      collapsed: !prevState.collapsed,\n    }));\n  };\n\n  render() {\n    const { event } = this.props;\n    const { collapsed } = this.state;\n\n    return (\n      <div>\n        <h1 className='summary'>\n          {event.summary}\n        </h1>\n        <p className='event-start'>\n          {new Date(event.start.dateTime).toString()}\n        </p>\n        <p className='event-location'>\n          {`@${event.summary} | ${event.location}`}\n        </p>\n\n        {!collapsed && (\n          <>\n            <h2 className='about'>\n              About event:\n            </h2>\n            <a className='link' href={event.htmlLink}>\n              See details on Google Calendar\n            </a>\n            <p className='description'>\n              {event.description}\n            </p>\n          </>\n        )}\n\n        <button className='details-button' onClick={() => this.toggleDetails()}>\n          {collapsed ? 'show' : 'hide'} details\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className='EventList'>\n        {events.map((event) => (\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: []\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    this.setState({\n      query: value,\n      suggestions,\n    });\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion\n    });\n  }\n\n  render() {\n    return (\n      <div className='CitySearch'>\n        <input\n          type='text'\n          className='city'\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n        />\n        <ul className='suggestions'>\n          {this.state.suggestions.map((suggestion) => (\n            <li\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >{suggestion}</li>\n          ))}\n          <li key='all'>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n  state = { num: 32 };\n\n  changeNum(value) {\n    this.setState({ num: value });\n  }\n\n  render() {\n    const { num } = this.state;\n\n    return (\n      <input\n        className='num'\n        type='number'\n        value={num}\n        onChange={(event) => {\n          this.changeNum(event.target.value);\n        }}\n      >\n      </input>\n    );\n  }\n}\n\nexport default NumberOfEvents;","const mockData = [\n  {\n    kind: \"calendar#event\",\n    etag: '\"3181161784712000\"',\n    id: \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    status: \"confirmed\",\n    htmlLink:\n      \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created: \"2020-05-19T19:17:46.000Z\",\n    updated: \"2020-05-27T12:01:32.356Z\",\n    summary: \"Learn JavaScript\",\n    description:\n      \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    location: \"London, UK\",\n    creator: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    organizer: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    start: {\n      dateTime: \"2020-05-19T16:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    end: {\n      dateTime: \"2020-05-19T17:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    recurringEventId: \"4eahs9ghkhrvkld72hogu9ph3e\",\n    originalStartTime: {\n      dateTime: \"2020-05-19T16:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    iCalUID: \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n    eventType: \"default\",\n  },\n  {\n    kind: \"calendar#event\",\n    etag: '\"3181159875584000\"',\n    id: \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    status: \"confirmed\",\n    htmlLink:\n      \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created: \"2020-05-19T19:14:30.000Z\",\n    updated: \"2020-05-27T11:45:37.792Z\",\n    summary: \"React is Fun\",\n    description:\n      \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    location: \"Berlin, Germany\",\n    creator: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    organizer: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    start: {\n      dateTime: \"2020-05-20T14:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    end: {\n      dateTime: \"2020-05-20T15:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    recurringEventId: \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    originalStartTime: {\n      dateTime: \"2020-05-20T14:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    iCalUID: \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n    eventType: \"default\",\n  }\n];\n\nexport { mockData };","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { mockData } from './mock-data';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch />\n        <EventList events={mockData} />\n        <NumberOfEvents />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}